@page "/GenSearch"
@inject SerOHRDb serOHRDb

@* This library is for Lists *@
@using System.Collections.Generic


<h3>Find Multiple Generators</h3>

<input type="text" @bind="strFirstChars" placeholder="Enter First Characters of Generator Name" />
<button @onclick="FetchGenerators">Get Generators</button>

<br />
<br />

@if (lstGenerators != null)
{   
    <TelerikGrid Data="@lstGenerators"
                 Pageable="true"
                 Sortable="true"
                 FilterMode="@GridFilterMode.FilterRow">
        <GridColumns>
            <GridColumn Field="@nameof(ModtblGenerator.GenNum)" Title="Generator Number" />
            <GridColumn Field="@nameof(ModtblGenerator.GenName)" Title="Generator Name" />
            <GridColumn Field="@nameof(ModtblGenerator.Street)" Title="Street" />
            <GridColumn Field="@nameof(ModtblGenerator.City)" Title="City" />
            <GridColumn Field="@nameof(ModtblGenerator.Province)" Title="Province" />
            <GridColumn Field="@nameof(ModtblGenerator.Country)" Title="Country" />
            <GridColumn Field="@nameof(ModtblGenerator.PostalCode)" Title="Postal Code" />
            <GridColumn Field="@nameof(ModtblGenerator.WasteClasses)" Title="Waste Classes" />
        </GridColumns>
    </TelerikGrid>
}
else if (blnFetching)
{
    <p>Loading...</p>
}
else if (blnError)
{
    <p>Error fetching Generators. Please try again.</p>
}

@code {
    private string strFirstChars;
    private List<ModtblGenerator> lstGenerators;
    private bool blnFetching = false;
    private bool blnError = false;

    private async Task FetchGenerators()
    {
        blnFetching = true;
        blnError = false;
        lstGenerators = null;

        try
        {
            lstGenerators = await serOHRDb.GetMultipleGeneratorAsync(strFirstChars);
        }
        catch (Exception)
        {
            blnError = true;
        }
        finally
        {
            blnFetching = false;
        }
    }
}
