@page "/"
@using Telerik.DataSource
@using Telerik.DataSource.Extensions

<TelerikMultiColumnComboBox TItem="Person"
                            TValue="int"
                            TextField="@TextField"
                            ValueField="@ValueField"
                            Filterable="false"
                            @bind-Value="@SelectedValue"
                            ItemHeight="@ItemHeight"
                            ListHeight="@ListHeight"
                            PageSize="@PageSize"
                            ScrollMode="@DropDownScrollMode.Virtual"
                            OnRead="@ReadItems"
                            ValueMapper="@ConvertValue">
    <MultiColumnComboBoxColumns>
        <MultiColumnComboBoxColumn Field="@nameof(Person.EmployeeId)" Width="200px" />
        <MultiColumnComboBoxColumn Field="@nameof(Person.Name)" Width="200px" />
    </MultiColumnComboBoxColumns>
</TelerikMultiColumnComboBox>

@code {
    public string TextField { get; set; } = "Name";
    public string ValueField { get; set; } = "EmployeeId";
    public string ListHeight { get; set; } = "260px";
    public int ItemHeight { get; set; } = 28;
    public int PageSize { get; set; } = 10;
    public int SelectedValue { get; set; } = 145;
    public string SelectedValueCustom { get; set; } = "Employee 145";

    public List<Person> AllData { get; set; }

    protected Task<Person> ConvertValue(int selectedValue)
    {
        return Task.FromResult(AllData.FirstOrDefault(x => selectedValue == x.EmployeeId));
    }

    protected Task<Person> ConvertValueCustom(string selectedValue)
    {
        return Task.FromResult(AllData.FirstOrDefault(x => selectedValue == x.Name));
    }

    protected async Task ReadItems(MultiColumnComboBoxReadEventArgs args)
    {
        await LoadData();

        var result = AllData.ToDataSourceResult(args.Request);
        args.Data = result.Data;
        args.Total = result.Total;
    }

    // sample Read operation
    private async Task LoadData()
    {
        if (AllData == null)
        {
            AllData = Enumerable.Range(0, 12345).Select(x => new Person
                {
                    EmployeeId = x,
                    Name = $"Name {x}"
                }).ToList();
        }
    }

    public class Person
    {
        public int EmployeeId { get; set; }
        public string Name { get; set; }
    }
}