@using Telerik.DataSource;
@using Telerik.DataSource.Extensions
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<TelerikGrid @ref="@GridRef"
             TItem="ModtblGenerator" 
             OnRead="@ReadItems"
             Sortable="true"
             SortMode="@SortMode.Multiple"
             FilterMode="GridFilterMode.FilterMenu"
             Resizable="true"
             Reorderable="true"
             Height="600px" 
             PageSize="25"
             RowHeight="60"
             ScrollMode="@GridScrollMode.Virtual"
             OnRowRender="@OnRowRender" 
             OnStateInit="@((GridStateEventArgs<ModtblGenerator> args) => OnStateInitHandler(args))"
             
>   
    @*  **************************************** Tool Bar **************************************** *@
    <GridToolBarTemplate>

        @* ******** Excel Button *@
        <GridCommandButton Command="ExcelExport" Icon="@SvgIcon.FileExcel">Export to Excel</GridCommandButton>

        @* ******** Clear All Button *@
        <TelerikButton ThemeColor="primary" OnClick="@ClearGridFilter">Clear Filters & Sorts</TelerikButton>

        @* ******** Record Count *@
        <span class="ml-2">Records: @GridData.Total</span>

    </GridToolBarTemplate>

    <GridExport>
        <GridExcelExport FileName="@strExcelFileName" AllPages="true"
                         OnBeforeExport="@(()=> { strExcelFileName=CreateExcelFileName(); } )" />
    </GridExport>

    @*  **************************************** Columns **************************************** *@
    
    <GridColumns>
    @* <GridColumn Field="@nameof(ModtblGenerator.Id)" Title="ID" HeaderClass="header" /> *@
    <GridColumn Field="@nameof(ModtblGenerator.GenName)" Title="Generator Name" HeaderClass="header">
        <Template>
                @{
                    var generator = context as ModtblGenerator;
                }
                <TelerikButton Icon="@SvgIcon.Search" OnClick="@(() => GoToPageGenSingle(generator))" ></TelerikButton>
                    <span>@generator.GenName</span>
            </Template>
        </GridColumn>
    <GridColumn Field="@nameof(ModtblGenerator.GenNum)" Title="Gen Number" HeaderClass="header" />
    <GridColumn Field="@nameof(ModtblGenerator.Street)" Title="Street" HeaderClass="header" />
    <GridColumn Field="@nameof(ModtblGenerator.City)" Title="City" HeaderClass="header" />
    <GridColumn Field="@nameof(ModtblGenerator.Province)" Title="Province" HeaderClass="header"/>
    <GridColumn Title="Waste Classes" HeaderClass="header" Filterable="false">
        <Template>
            @{
                var generator = context as ModtblGenerator;
            }
            <TelerikButton Icon="@SvgIcon.Search" OnClick="@(() => ShowWindowWasteClasses(generator))" ></TelerikButton>
            <span>@generator.WasteClasses</span>
        </Template>
    </GridColumn>
    </GridColumns>
</TelerikGrid>



<TelerikWindow @bind-Visible="@blnShowWindowWasteClasses" Modal="true">
    <WindowTitle>
        <strong>@currentGenerator.GenName</strong>
    </WindowTitle>
    <WindowContent>
        @currentGenerator.WasteClasses
    </WindowContent>
    <WindowActions>
        <WindowAction Name="Close"></WindowAction>
    </WindowActions>
</TelerikWindow>

<style>
    .header {
        font-weight: bold;
        color: black;
    }
    /* OnRowRender */
    .k-grid tr.custom-ellipsis .k-table-td {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>