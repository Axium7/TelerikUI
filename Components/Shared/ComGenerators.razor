@using Telerik.DataSource;

<TelerikGrid @ref="@GridRef"
             Data="@Generators"
             Pageable="true"
             Sortable="true"
             FilterMode="GridFilterMode.FilterMenu"
             Resizable="true"
             Reorderable="true">
    @*  **************************************** Tool Bar **************************************** *@
    <GridToolBarTemplate>
        
        @* ******** Excel Button *@
        <GridCommandButton Command="ExcelExport" Icon="@SvgIcon.FileExcel">Export to Excel</GridCommandButton>

        @* ******** AutoFill Button *@
        <TelerikButton OnClick="AutoFitAllColumns" >AutoFit All Columns</TelerikButton>

        @* ******** Clear All filters Button *@
        <TelerikButton ThemeColor="primary" OnClick="@ClearGridFilter">Clear Filters</TelerikButton>
    
    </GridToolBarTemplate>

    <GridExport>
        <GridExcelExport FileName="@strExcelFileName" AllPages="@blnExportAllPages"
                         OnBeforeExport="@(()=> { strExcelFileName=CreateExcelFileName(); } )" />
    </GridExport>

   @*  **************************************** Columns **************************************** *@
    
   <GridColumns>
         @* Gen Number is a HyperLink to the Generator Details Page *@

        <GridColumn Field="@nameof(ModtblGenerator.GenNum)" Title="Gen Number"> 
            @* <Template>
                @{
                    var generator = context as ModtblGenerator;
                    @((MarkupString)$"<a href=\"http://mysite.com/employee/{generator.Id}\" target=\"_blank\">{employee.Name}</a>")
                }
            </Template> *@
        </GridColumn>
        <GridColumn Field="@nameof(ModtblGenerator.GenName)" Title="Generator Name" />
        <GridColumn Field="@nameof(ModtblGenerator.Street)" Title="Street" />
        <GridColumn Field="@nameof(ModtblGenerator.City)" Title="City" />
        <GridColumn Field="@nameof(ModtblGenerator.Province)" Title="Province" />
        <GridColumn Field="@nameof(ModtblGenerator.Country)" Title="Country" />
        <GridColumn Field="@nameof(ModtblGenerator.PostalCode)" Title="Postal Code" />
        <GridColumn Field="@nameof(ModtblGenerator.WasteClasses)" Title="Waste Classes" Filterable="false" />
    </GridColumns>
</TelerikGrid>

@code {

    [Parameter]
    public List<ModtblGenerator> Generators { get; set; }

    [Parameter]
    public string FirstChars { get; set; }

    TelerikGrid<ModtblGenerator> GridRef { get; set; }

    string strExcelFileName = "excelfile";
    bool blnExportAllPages = true;

    string CreateExcelFileName()
    {
        return $"GeneratorSearch_{FirstChars}_{DateTime.Now.ToString("MMMM_dd_yyyy")}";
    }

    private async Task AutoFitAllColumns()
    {
        await GridRef.AutoFitAllColumnsAsync();
    }

    private async Task ClearGridFilter()
    {
        GridState<ModtblGenerator> desiredState = new GridState<ModtblGenerator>()
            {
                //clears the filter list in the new Grid state
                FilterDescriptors = new List<IFilterDescriptor>()
            };

        await GridRef.SetStateAsync(desiredState);
    }

}
